{"ast":null,"code":"/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('katex').KatexOptions} Options\n */\n\nimport katex from 'katex';\nimport { visit } from 'unist-util-visit';\nimport { removePosition } from 'unist-util-remove-position';\nimport { toText } from 'hast-util-to-text';\nimport { unified } from 'unified';\nimport rehypeParse from 'rehype-parse';\nconst assign = Object.assign;\nconst parseHtml = unified().use(rehypeParse, {\n  fragment: true\n});\nconst source = 'rehype-katex';\n\n/**\n * Plugin to transform `<span class=math-inline>` and `<div class=math-display>`\n * with KaTeX.\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeKatex(options) {\n  const settings = options || {};\n  const throwOnError = settings.throwOnError || false;\n  return (tree, file) => {\n    visit(tree, 'element', element => {\n      const classes = element.properties && Array.isArray(element.properties.className) ? element.properties.className : [];\n      const inline = classes.includes('math-inline');\n      const displayMode = classes.includes('math-display');\n      if (!inline && !displayMode) {\n        return;\n      }\n      const value = toText(element, {\n        whitespace: 'pre'\n      });\n\n      /** @type {string} */\n      let result;\n      try {\n        result = katex.renderToString(value, assign({}, settings, {\n          displayMode,\n          throwOnError: true\n        }));\n      } catch (error_) {\n        const error = /** @type {Error} */error_;\n        const fn = throwOnError ? 'fail' : 'message';\n        const origin = [source, error.name.toLowerCase()].join(':');\n        file[fn](error.message, element.position, origin);\n        result = katex.renderToString(value, assign({}, settings, {\n          displayMode,\n          throwOnError: false,\n          strict: 'ignore'\n        }));\n      }\n\n      // @ts-expect-error: assume no `doctypes` in KaTeX result.\n      element.children = removePosition(parseHtml.parse(result), true).children;\n    });\n  };\n}","map":{"version":3,"names":["katex","visit","removePosition","toText","unified","rehypeParse","assign","Object","parseHtml","use","fragment","source","rehypeKatex","options","settings","throwOnError","tree","file","element","classes","properties","Array","isArray","className","inline","includes","displayMode","value","whitespace","result","renderToString","error_","error","fn","origin","name","toLowerCase","join","message","position","strict","children","parse"],"sources":["E:/CScourse/视听觉/Sound-Quality-HCI/node_modules/rehype-katex/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('katex').KatexOptions} Options\n */\n\nimport katex from 'katex'\nimport {visit} from 'unist-util-visit'\nimport {removePosition} from 'unist-util-remove-position'\nimport {toText} from 'hast-util-to-text'\nimport {unified} from 'unified'\nimport rehypeParse from 'rehype-parse'\n\nconst assign = Object.assign\n\nconst parseHtml = unified().use(rehypeParse, {fragment: true})\n\nconst source = 'rehype-katex'\n\n/**\n * Plugin to transform `<span class=math-inline>` and `<div class=math-display>`\n * with KaTeX.\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeKatex(options) {\n  const settings = options || {}\n  const throwOnError = settings.throwOnError || false\n\n  return (tree, file) => {\n    visit(tree, 'element', (element) => {\n      const classes =\n        element.properties && Array.isArray(element.properties.className)\n          ? element.properties.className\n          : []\n      const inline = classes.includes('math-inline')\n      const displayMode = classes.includes('math-display')\n\n      if (!inline && !displayMode) {\n        return\n      }\n\n      const value = toText(element, {whitespace: 'pre'})\n\n      /** @type {string} */\n      let result\n\n      try {\n        result = katex.renderToString(\n          value,\n          assign({}, settings, {displayMode, throwOnError: true})\n        )\n      } catch (error_) {\n        const error = /** @type {Error} */ (error_)\n        const fn = throwOnError ? 'fail' : 'message'\n        const origin = [source, error.name.toLowerCase()].join(':')\n\n        file[fn](error.message, element.position, origin)\n\n        result = katex.renderToString(\n          value,\n          assign({}, settings, {\n            displayMode,\n            throwOnError: false,\n            strict: 'ignore'\n          })\n        )\n      }\n\n      // @ts-expect-error: assume no `doctypes` in KaTeX result.\n      element.children = removePosition(parseHtml.parse(result), true).children\n    })\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,QAAO,kBAAkB;AACtC,SAAQC,cAAc,QAAO,4BAA4B;AACzD,SAAQC,MAAM,QAAO,mBAAmB;AACxC,SAAQC,OAAO,QAAO,SAAS;AAC/B,OAAOC,WAAW,MAAM,cAAc;AAEtC,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAM;AAE5B,MAAME,SAAS,GAAGJ,OAAO,EAAE,CAACK,GAAG,CAACJ,WAAW,EAAE;EAACK,QAAQ,EAAE;AAAI,CAAC,CAAC;AAE9D,MAAMC,MAAM,GAAG,cAAc;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAWA,CAACC,OAAO,EAAE;EAC3C,MAAMC,QAAQ,GAAGD,OAAO,IAAI,CAAC,CAAC;EAC9B,MAAME,YAAY,GAAGD,QAAQ,CAACC,YAAY,IAAI,KAAK;EAEnD,OAAO,CAACC,IAAI,EAAEC,IAAI,KAAK;IACrBhB,KAAK,CAACe,IAAI,EAAE,SAAS,EAAGE,OAAO,IAAK;MAClC,MAAMC,OAAO,GACXD,OAAO,CAACE,UAAU,IAAIC,KAAK,CAACC,OAAO,CAACJ,OAAO,CAACE,UAAU,CAACG,SAAS,CAAC,GAC7DL,OAAO,CAACE,UAAU,CAACG,SAAS,GAC5B,EAAE;MACR,MAAMC,MAAM,GAAGL,OAAO,CAACM,QAAQ,CAAC,aAAa,CAAC;MAC9C,MAAMC,WAAW,GAAGP,OAAO,CAACM,QAAQ,CAAC,cAAc,CAAC;MAEpD,IAAI,CAACD,MAAM,IAAI,CAACE,WAAW,EAAE;QAC3B;MACF;MAEA,MAAMC,KAAK,GAAGxB,MAAM,CAACe,OAAO,EAAE;QAACU,UAAU,EAAE;MAAK,CAAC,CAAC;;MAElD;MACA,IAAIC,MAAM;MAEV,IAAI;QACFA,MAAM,GAAG7B,KAAK,CAAC8B,cAAc,CAC3BH,KAAK,EACLrB,MAAM,CAAC,CAAC,CAAC,EAAEQ,QAAQ,EAAE;UAACY,WAAW;UAAEX,YAAY,EAAE;QAAI,CAAC,CAAC,CACxD;MACH,CAAC,CAAC,OAAOgB,MAAM,EAAE;QACf,MAAMC,KAAK,GAAG,oBAAsBD,MAAO;QAC3C,MAAME,EAAE,GAAGlB,YAAY,GAAG,MAAM,GAAG,SAAS;QAC5C,MAAMmB,MAAM,GAAG,CAACvB,MAAM,EAAEqB,KAAK,CAACG,IAAI,CAACC,WAAW,EAAE,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;QAE3DpB,IAAI,CAACgB,EAAE,CAAC,CAACD,KAAK,CAACM,OAAO,EAAEpB,OAAO,CAACqB,QAAQ,EAAEL,MAAM,CAAC;QAEjDL,MAAM,GAAG7B,KAAK,CAAC8B,cAAc,CAC3BH,KAAK,EACLrB,MAAM,CAAC,CAAC,CAAC,EAAEQ,QAAQ,EAAE;UACnBY,WAAW;UACXX,YAAY,EAAE,KAAK;UACnByB,MAAM,EAAE;QACV,CAAC,CAAC,CACH;MACH;;MAEA;MACAtB,OAAO,CAACuB,QAAQ,GAAGvC,cAAc,CAACM,SAAS,CAACkC,KAAK,CAACb,MAAM,CAAC,EAAE,IAAI,CAAC,CAACY,QAAQ;IAC3E,CAAC,CAAC;EACJ,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}
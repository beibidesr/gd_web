{"ast":null,"code":"var _jsxFileName = \"E:\\\\CScourse\\\\\\u89C6\\u542C\\u89C9\\\\Sound-Quality-HCI\\\\src\\\\components\\\\AlgorithmSelection.js\",\n  _s = $RefreshSig$();\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst availableAlgorithms = [\"mosnet\", \"srmr\", \"bsseval\", \"pesq\", \"sisdr\", \"stoi\"];\nfunction booleanObjFromArr(arr, bool) {\n  let obj = {};\n  for (let i = 0; i < arr.length; i++) {\n    obj[arr[i]] = bool;\n  }\n  return obj;\n}\nconst allFalseState = booleanObjFromArr(availableAlgorithms, false);\nconst initState = {\n  ...allFalseState,\n  mosnet: true\n};\nfunction AlgorithmSelection(_ref) {\n  _s();\n  let {\n    callBack,\n    mode\n  } = _ref;\n  const {\n    t\n  } = useTranslation(\"main\");\n  const allSetState = booleanObjFromArr(availableAlgorithms, true);\n  const [algorithms, setAlgorithms] = useState(initState);\n  const checkAll = expect => {\n    return availableAlgorithms.reduce((flag, algo) => {\n      flag = flag && (expect ? algorithms[algo] : !algorithms[algo]);\n      return flag;\n    }, true);\n  };\n  function setAll(e) {\n    if (e.target.checked) {\n      setAlgorithms(allSetState);\n      callBack(allSetState);\n    } else {\n      setAlgorithms(allFalseState);\n      callBack(allFalseState);\n    }\n  }\n  function handleChangeController(name) {\n    return function inner(e) {\n      setAlgorithms(prevState => {\n        let newState = {\n          ...prevState\n        };\n        newState[name] = e.target.checked;\n        callBack(newState);\n        return newState;\n      });\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      border: \"1px solid\",\n      borderRadius: \"5px\",\n      p: 1,\n      mt: 2\n    },\n    children: [t(\"hints.chooseAlgorithms\"), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      label: t(\"descriptions.all\"),\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: checkAll(true),\n        indeterminate: !checkAll(true) && !checkAll(false),\n        onChange: setAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr 1fr\"\n      },\n      children: availableAlgorithms.map(algo => {\n        if (mode === \"RECORD\" && (algo === \"bsseval\" || algo === \"pesq\")) return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"none\"\n          }\n        }, algo, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 23\n        }, this);\n        return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          label: algo + t('descriptions.algo'),\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: algorithms[algo],\n            onChange: handleChangeController(algo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 23\n          }, this)\n        }, algo, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n}\n_s(AlgorithmSelection, \"yMPv1fpzI73dIej8r99kycCMHHA=\", false, function () {\n  return [useTranslation];\n});\n_c = AlgorithmSelection;\nexport { AlgorithmSelection, availableAlgorithms, initState };\nvar _c;\n$RefreshReg$(_c, \"AlgorithmSelection\");","map":{"version":3,"names":["Checkbox","FormControlLabel","Box","useState","useTranslation","jsxDEV","_jsxDEV","availableAlgorithms","booleanObjFromArr","arr","bool","obj","i","length","allFalseState","initState","mosnet","AlgorithmSelection","_ref","_s","callBack","mode","t","allSetState","algorithms","setAlgorithms","checkAll","expect","reduce","flag","algo","setAll","e","target","checked","handleChangeController","name","inner","prevState","newState","sx","border","borderRadius","p","mt","children","label","control","indeterminate","onChange","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","map","_c","$RefreshReg$"],"sources":["E:/CScourse/视听觉/Sound-Quality-HCI/src/components/AlgorithmSelection.js"],"sourcesContent":["import {Checkbox, FormControlLabel} from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nconst availableAlgorithms = [\n  \"mosnet\",\n  \"srmr\",\n  \"bsseval\",\n  \"pesq\",\n  \"sisdr\",\n  \"stoi\"\n]\n\nfunction booleanObjFromArr(arr, bool) {\n  let obj = {}\n  for (let i = 0; i<arr.length; i++) {\n    obj[arr[i]] = bool;\n  }\n  return obj\n}\n\nconst allFalseState = booleanObjFromArr(availableAlgorithms, false)\nconst initState = {...allFalseState, mosnet: true}\n\nfunction AlgorithmSelection({callBack, mode}) {\n  const {t} = useTranslation(\"main\");\n  const allSetState = booleanObjFromArr(availableAlgorithms, true)\n  const [algorithms, setAlgorithms] = useState(initState);\n\n  const checkAll = (expect) => {\n    return availableAlgorithms.reduce((flag, algo) => {\n      flag = flag && (expect ? algorithms[algo] : !algorithms[algo]);\n      return flag;\n    }, true)\n  }\n\n  function setAll(e) {\n    if (e.target.checked) {\n      setAlgorithms(allSetState)\n      callBack(allSetState)\n    } else {\n      setAlgorithms(allFalseState)\n      callBack(allFalseState)\n    }\n  }\n\n  function handleChangeController(name) {\n    return function inner(e) {\n      setAlgorithms(prevState => {\n        let newState = {...prevState}\n        newState[name] = e.target.checked\n        callBack(newState)\n        return newState\n      })\n    }\n  }\n\n  return (\n      <Box sx={{\n        border: \"1px solid\",\n        borderRadius: \"5px\",\n        p: 1, mt: 2\n      }} >\n        {t(\"hints.chooseAlgorithms\")}\n        <FormControlLabel\n            label={t(\"descriptions.all\")}\n            control={\n              <Checkbox\n                  checked={checkAll(true)}\n                  indeterminate={!checkAll(true) && !checkAll(false)}\n                  onChange={setAll}\n              />}\n        />\n        <Box sx={{\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr 1fr\"\n        }} >\n          {availableAlgorithms.map((algo) => {\n            if (mode === \"RECORD\" && (algo === \"bsseval\" || algo === \"pesq\"))\n              return (<Box sx={{display: \"none\"}} key={algo}></Box>);\n            return (\n                <FormControlLabel\n                    key={algo}\n                    label={algo + t('descriptions.algo')}\n                    control={\n                      <Checkbox\n                          checked={algorithms[algo]}\n                          onChange={handleChangeController(algo)}\n                      />}\n                />\n            )\n          })}\n        </Box>\n      </Box>\n  )\n}\n\nexport {AlgorithmSelection, availableAlgorithms, initState}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
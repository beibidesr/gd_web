{"ast":null,"code":"import axios from \"axios\";\nasync function uploadForDenoising(audioUrl) {\n  let audio = await fetch(audioUrl).then(r => r.blob());\n  let type = \"wav\";\n  if (audio.type === \"audio/webm\") {\n    type = \"webm\";\n  }\n  let form = new FormData();\n  form.append(\"audioFile\", audio);\n  form.append(\"type\", type);\n  return axios.post(\"http://localhost:3000/audioDenoising\", form, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n}\nexport { uploadForDenoising };","map":{"version":3,"names":["axios","uploadForDenoising","audioUrl","audio","fetch","then","r","blob","type","form","FormData","append","post","headers"],"sources":["E:/CScourse/视听觉/Sound-Quality-HCI/src/requests/audioDenoise.js"],"sourcesContent":["import axios from \"axios\";\n\nasync function uploadForDenoising(audioUrl) {\n  let audio = await fetch(audioUrl).then(r => r.blob())\n  let type = \"wav\"\n  if (audio.type === \"audio/webm\") {\n    type = \"webm\"\n  }\n  let form = new FormData()\n  form.append(\"audioFile\", audio)\n  form.append(\"type\", type)\n  return axios.post(\"http://localhost:3000/audioDenoising\", form, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  })\n}\n\nexport {uploadForDenoising}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAeC,kBAAkBA,CAACC,QAAQ,EAAE;EAC1C,IAAIC,KAAK,GAAG,MAAMC,KAAK,CAACF,QAAQ,CAAC,CAACG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE,CAAC;EACrD,IAAIC,IAAI,GAAG,KAAK;EAChB,IAAIL,KAAK,CAACK,IAAI,KAAK,YAAY,EAAE;IAC/BA,IAAI,GAAG,MAAM;EACf;EACA,IAAIC,IAAI,GAAG,IAAIC,QAAQ,EAAE;EACzBD,IAAI,CAACE,MAAM,CAAC,WAAW,EAAER,KAAK,CAAC;EAC/BM,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EACzB,OAAOR,KAAK,CAACY,IAAI,CAAC,sCAAsC,EAAEH,IAAI,EAAE;IAC9DI,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ;AAEA,SAAQZ,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}